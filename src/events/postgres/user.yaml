# ONE
http.get./postgres/user/{id}:
  summary: Fetch User
  description: Fetch User from database
  fn: com.biz.postgres.user.one
  params:
    - name: id
      in: path
      required: true
      schema:
        type: string
  responses:
    '200':
      content:
        application/json:
          schema:
            type: object

# CREATE
http.post./postgres/user:
  summary: Create a new User
  description: Create User from database
  fn: com.biz.postgres.user.create
  body:
    content:
      application/json:
        schema:
          $ref: '#/definitions/postgres/User'
  responses:
    '201':
      content:
        application/json:
          schema:
            type: object

# UPDATE
http.put./postgres/user/{id}:
  summary: Update a User
  description: Update User from database
  fn: com.biz.postgres.user.update
  body:
    content:
      application/json:
        schema:
          $ref: '#/definitions/postgres/User'
  params:
    - name: id
      in: path
      required: true
      schema:
        type: string
  responses:
    '204':
      content:
        application/json:
          schema:
            type: object

# DELETE
http.delete./postgres/user/{id}:
  summary: Delete a User
  description: Delete User from database
  fn: com.biz.postgres.user.delete
  params:
    - name: id
      in: path
      required: true
      schema:
        type: string
  responses:
    '202':
      content:
        application/json:
          schema:
            type: object

# SEARCH
http.post./postgres/user/search:
  summary: Fetch multiple User
  description: Fetch multiple User from database
  fn: com.biz.postgres.user.search
  body:
    content:
      application/json:
        schema:
          type: object
  responses:
    '200':
      content:
        application/json:
          schema:
            type: array

